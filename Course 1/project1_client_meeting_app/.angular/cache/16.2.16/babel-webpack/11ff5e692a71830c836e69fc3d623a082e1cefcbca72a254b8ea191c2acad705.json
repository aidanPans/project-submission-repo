{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nclass ClientComponent {\n  // loginRef = new FormGroup({\n  //   emailid:new FormControl(),\n  //   password:new FormControl()\n  // });\n  constructor(ds, router) {\n    this.ds = ds;\n    this.router = router;\n    this.clientRef = new FormGroup({\n      cli_name: new FormControl(),\n      emailid: new FormControl(),\n      cli_address: new FormControl(),\n      password: new FormControl(),\n      RePassword: new FormControl()\n    });\n  }\n  addClient() {\n    // creating new client and login variables with data\n    let new_client = this.clientRef.value;\n    // let new_login = {new_client.emailid, new_client.password};\n    if (new_client.password != new_client.RePassword) {\n      alert(\"Passwords do not match, please try again\");\n      // this.loginRef.reset();\n      this.clientRef.reset();\n    } else {\n      // adding the new client and login data using the service adder functions in data.service.ts file\n      this.ds.addClient(new_client);\n      this.ds.addLogin(new_login);\n      this.router.navigate([\"/login\"], {\n        skipLocationChange: true\n      });\n    }\n    // reset and route user to login page\n    // this.loginRef.reset();\n    this.clientRef.reset();\n    // this.router.navigate([\"/login\"], {skipLocationChange:true});\n  }\n\n  static {\n    this.ɵfac = function ClientComponent_Factory(t) {\n      return new (t || ClientComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ClientComponent,\n      selectors: [[\"app-client\"]],\n      decls: 36,\n      vars: 1,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"name\", \"formControlName\", \"cli_name\", \"id\", \"name\", \"placeholder\", \"Enter Name\"], [\"type\", \"email\", \"formControlName\", \"emailid\", \"id\", \"email\", \"placeholder\", \"Enter Email\"], [\"type\", \"address\", \"formControlName-\", \"cli_address\", \"id\", \"address\", \"placeholder\", \"Enter Address\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter Password\"], [\"type\", \"password\", \"formControlName\", \"RePassword\", \"id\", \"password\", \"placeholder\", \"Re-Enter Password\"], [\"type\", \"submit\", \"value\", \"Register\", \"id\", \"submitButton\"], [\"type\", \"reset\"]],\n      template: function ClientComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n          i0.ɵɵtext(2, \"Create a Client\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\");\n          i0.ɵɵtext(4, \"Please fill in this form to create a client.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"hr\");\n          i0.ɵɵelementStart(6, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ClientComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.addClient();\n          });\n          i0.ɵɵelementStart(7, \"label\");\n          i0.ɵɵtext(8, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"br\")(10, \"input\", 1)(11, \"br\");\n          i0.ɵɵelementStart(12, \"label\");\n          i0.ɵɵtext(13, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"br\")(15, \"input\", 2)(16, \"br\");\n          i0.ɵɵelementStart(17, \"label\");\n          i0.ɵɵtext(18, \"Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"br\")(20, \"input\", 3)(21, \"br\");\n          i0.ɵɵelementStart(22, \"label\");\n          i0.ɵɵtext(23, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"br\")(25, \"input\", 4)(26, \"br\");\n          i0.ɵɵelementStart(27, \"label\");\n          i0.ɵɵtext(28, \"Re-enter Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"br\")(30, \"input\", 5)(31, \"br\")(32, \"hr\")(33, \"input\", 6);\n          i0.ɵɵtext(34, \" | \");\n          i0.ɵɵelement(35, \"input\", 7);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.clientRef);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { ClientComponent };","map":{"version":3,"names":["FormControl","FormGroup","ClientComponent","constructor","ds","router","clientRef","cli_name","emailid","cli_address","password","RePassword","addClient","new_client","value","alert","reset","addLogin","new_login","navigate","skipLocationChange","i0","ɵɵdirectiveInject","i1","DataService","i2","Router","selectors","decls","vars","consts","template","ClientComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ClientComponent_Template_form_ngSubmit_6_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/aidan/Desktop/CalTech Bootcamp/project1_client_meeting_app/src/app/client/client.component.ts","/Users/aidan/Desktop/CalTech Bootcamp/project1_client_meeting_app/src/app/client/client.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DataService } from '../service/data.service';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css']\n})\nexport class ClientComponent {\n\n  clientRef = new FormGroup({\n    cli_name:new FormControl(),\n    emailid:new FormControl(),\n    cli_address:new FormControl(),\n    password:new FormControl(),\n    RePassword:new FormControl()\n  });\n\n  // loginRef = new FormGroup({\n  //   emailid:new FormControl(),\n  //   password:new FormControl()\n  // });\n\n  constructor(public ds:DataService, public router:Router) { // DI for Data Service\n  }\n\n  addClient(): void {\n    // creating new client and login variables with data\n    let new_client = this.clientRef.value;\n    // let new_login = {new_client.emailid, new_client.password};\n\n    if (new_client.password != new_client.RePassword) {\n      alert(\"Passwords do not match, please try again\");\n      // this.loginRef.reset();\n      this.clientRef.reset();\n    }\n    else {\n      // adding the new client and login data using the service adder functions in data.service.ts file\n      this.ds.addClient(new_client);\n      this.ds.addLogin(new_login);\n      this.router.navigate([\"/login\"], {skipLocationChange:true});\n    }\n\n    // reset and route user to login page\n    // this.loginRef.reset();\n    this.clientRef.reset();\n    // this.router.navigate([\"/login\"], {skipLocationChange:true});\n  }\n\n}\n","<div>\n    <h1>Create a Client</h1>\n    <p>Please fill in this form to create a client.</p>\n    <hr>\n    <form [formGroup]=\"clientRef\" (ngSubmit)=\"addClient()\">\n        <label>Name</label><br/>\n            <input type=\"name\" formControlName=\"cli_name\" id=\"name\" placeholder=\"Enter Name\"/><br/>\n        <label>Email</label><br/>\n            <input type=\"email\" formControlName=\"emailid\" id=\"email\" placeholder=\"Enter Email\"/><br/>\n        <label>Address</label><br/>\n            <input type=\"address\" formControlName-=\"cli_address\" id=\"address\" placeholder=\"Enter Address\"/><br/>\n        <label>Password</label><br/>\n            <input type=\"password\" formControlName=\"password\" id=\"password\" placeholder=\"Enter Password\"/><br/>\n        <label>Re-enter Password</label><br/>\n            <input type=\"password\" formControlName=\"RePassword\" id=\"password\" placeholder=\"Re-Enter Password\"/><br/>\n        <hr>\n        <input type=\"submit\" value=\"Register\" id=\"submitButton\"/> |\n        <input type=\"reset\">\n    </form>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}