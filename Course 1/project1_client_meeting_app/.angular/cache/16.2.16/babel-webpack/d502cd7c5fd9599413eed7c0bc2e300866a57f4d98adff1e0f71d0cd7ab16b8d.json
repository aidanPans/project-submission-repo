{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/data.service\";\nimport * as i2 from \"@angular/forms\";\nclass ClientComponent {\n  constructor(ds) {\n    this.ds = ds;\n    this.clientRef = new FormGroup({\n      cli_name: new FormControl(),\n      cli_emailid: new FormControl(),\n      cli_address: new FormControl(),\n      password: new FormControl()\n    });\n    this.loginRef = new FormGroup({});\n  }\n  addClient() {\n    let new_client = this.clientRef.value;\n    let new_login = this.clientRef.\n    // need to see how to call the service layer funcntion to add clients to the array \n    this.ds.addClient(new_client);\n  }\n  static {\n    this.ɵfac = function ClientComponent_Factory(t) {\n      return new (t || ClientComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ClientComponent,\n      selectors: [[\"app-client\"]],\n      decls: 28,\n      vars: 1,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"name\", \"formControlName\", \"cli_name\", \"id\", \"name\"], [\"type\", \"email\", \"formControlName\", \"cli_emailid\", \"id\", \"email\"], [\"type\", \"address\", \"formControlName-\", \"cli_address\", \"id\", \"address\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\"], [\"type\", \"submit\", \"value\", \"Register\", \"id\", \"submitButton\"]],\n      template: function ClientComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n          i0.ɵɵtext(2, \"Create a Client\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\");\n          i0.ɵɵtext(4, \"Please fill in this form to create a client.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"hr\");\n          i0.ɵɵelementStart(6, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ClientComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.addClient();\n          });\n          i0.ɵɵelementStart(7, \"label\");\n          i0.ɵɵtext(8, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 1)(10, \"br\");\n          i0.ɵɵelementStart(11, \"label\");\n          i0.ɵɵtext(12, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 2)(14, \"br\");\n          i0.ɵɵelementStart(15, \"label\");\n          i0.ɵɵtext(16, \"Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 3)(18, \"br\");\n          i0.ɵɵelementStart(19, \"label\");\n          i0.ɵɵtext(20, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 4)(22, \"br\");\n          i0.ɵɵelementStart(23, \"label\");\n          i0.ɵɵtext(24, \"Re-enter Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"input\", 4)(26, \"br\")(27, \"input\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.clientRef);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { ClientComponent };","map":{"version":3,"names":["FormControl","FormGroup","ClientComponent","constructor","ds","clientRef","cli_name","cli_emailid","cli_address","password","loginRef","addClient","new_client","value","new_login","this","i0","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","ClientComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ClientComponent_Template_form_ngSubmit_6_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/aidan/Desktop/CalTech Bootcamp/project1_client_meeting_app/src/app/client/client.component.ts","/Users/aidan/Desktop/CalTech Bootcamp/project1_client_meeting_app/src/app/client/client.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DataService } from '../service/data.service';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css']\n})\nexport class ClientComponent {\n\n  clientRef = new FormGroup({\n    cli_name:new FormControl(),\n    cli_emailid:new FormControl(),\n    cli_address:new FormControl(),\n    password:new FormControl()\n  });\n\n  loginRef = new FormGroup({\n    \n  })\n\n  constructor(public ds:DataService) { // DI for Login Service\n  }\n\n  addClient(): void {\n    let new_client = this.clientRef.value;\n    let new_login = this.clientRef.\n\n    // need to see how to call the service layer funcntion to add clients to the array \n    this.ds.addClient(new_client);    \n  }\n\n}\n","<div>\n    <h1>Create a Client</h1>\n    <p>Please fill in this form to create a client.</p>\n    <hr>\n    <form [formGroup]=\"clientRef\" (ngSubmit)=\"addClient()\">\n        <label>Name</label>\n            <input type=\"name\" formControlName=\"cli_name\" id=\"name\"/><br/>\n        <label>Email</label>\n            <input type=\"email\" formControlName=\"cli_emailid\" id=\"email\"/><br/>\n        <label>Address</label>\n            <input type=\"address\" formControlName-=\"cli_address\" id=\"address\"/><br/>\n        <label>Password</label>\n            <input type=\"password\" formControlName=\"password\" id=\"password\"/><br/>\n        <label>Re-enter Password</label>\n            <input type=\"password\" formControlName=\"password\" id=\"password\"/><br/>\n        <input type=\"submit\" value=\"Register\" id=\"submitButton\"/> \n    </form>\n</div>"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;AAKvD,MAKaC,eAAe;EAa1BC,YAAmBC,EAAc;IAAd,KAAAA,EAAE,GAAFA,EAAE;IAXrB,KAAAC,SAAS,GAAG,IAAIJ,SAAS,CAAC;MACxBK,QAAQ,EAAC,IAAIN,WAAW,EAAE;MAC1BO,WAAW,EAAC,IAAIP,WAAW,EAAE;MAC7BQ,WAAW,EAAC,IAAIR,WAAW,EAAE;MAC7BS,QAAQ,EAAC,IAAIT,WAAW;KACzB,CAAC;IAEF,KAAAU,QAAQ,GAAG,IAAIT,SAAS,CAAC,EAExB,CAAC;EAGF;EAEAU,SAASA,CAAA;IACP,IAAIC,UAAU,GAAG,IAAI,CAACP,SAAS,CAACQ,KAAK;IACrC,IAAIC,SAAS,GAAG,IAAI,CAACT,SAAS;IAE9B;IACAU,IAAI,CAACX,EAAE,CAACO,SAAS,CAACC,UAAU,CAAC;EAC/B;;;uBAtBWV,eAAe,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAfjB,eAAe;MAAAkB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCX5BV,EAAA,CAAAY,cAAA,UAAK;UACGZ,EAAA,CAAAa,MAAA,sBAAe;UAAAb,EAAA,CAAAc,YAAA,EAAK;UACxBd,EAAA,CAAAY,cAAA,QAAG;UAAAZ,EAAA,CAAAa,MAAA,mDAA4C;UAAAb,EAAA,CAAAc,YAAA,EAAI;UACnDd,EAAA,CAAAe,SAAA,SAAI;UACJf,EAAA,CAAAY,cAAA,cAAuD;UAAzBZ,EAAA,CAAAgB,UAAA,sBAAAC,kDAAA;YAAA,OAAYN,GAAA,CAAAhB,SAAA,EAAW;UAAA,EAAC;UAClDK,EAAA,CAAAY,cAAA,YAAO;UAAAZ,EAAA,CAAAa,MAAA,WAAI;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UACfd,EAAA,CAAAe,SAAA,eAAyD;UAC7Df,EAAA,CAAAY,cAAA,aAAO;UAAAZ,EAAA,CAAAa,MAAA,aAAK;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UAChBd,EAAA,CAAAe,SAAA,gBAA8D;UAClEf,EAAA,CAAAY,cAAA,aAAO;UAAAZ,EAAA,CAAAa,MAAA,eAAO;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UAClBd,EAAA,CAAAe,SAAA,gBAAmE;UACvEf,EAAA,CAAAY,cAAA,aAAO;UAAAZ,EAAA,CAAAa,MAAA,gBAAQ;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UACnBd,EAAA,CAAAe,SAAA,gBAAiE;UACrEf,EAAA,CAAAY,cAAA,aAAO;UAAAZ,EAAA,CAAAa,MAAA,yBAAiB;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UAC5Bd,EAAA,CAAAe,SAAA,gBAAiE;UAEzEf,EAAA,CAAAc,YAAA,EAAO;;;UAZDd,EAAA,CAAAkB,SAAA,GAAuB;UAAvBlB,EAAA,CAAAmB,UAAA,cAAAR,GAAA,CAAAtB,SAAA,CAAuB;;;;;;;;SDOpBH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}