{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nclass LoginComponent {\n  constructor(router) {\n    this.router = router;\n    // msg:string = \"\";\n    this.loginRef = new FormGroup({\n      emailid: new FormControl(),\n      password: new FormControl()\n    });\n  }\n  checkLoginDetails() {\n    let login = this.loginRef.value;\n    // if (login.emailid == \"admin@gmail.com\" && login.password == \"admin123\") {\n    //   alert(\"Successful Login!\");\n    //   sessionStorage.setItem(\"emailid\", login.emailid);\n    //   this.router.navigate([\"/home\"], {skipLocationChange:true});\n    // }\n    // else {\n    //   alert(\"Unsuccessful login attempt! Please try again!\");\n    // }\n    // this.loginRef.reset();\n  }\n\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 14,\n      vars: 1,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"formControlName\", \"emailid\", \"id\", \"email\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\"], [\"type\", \"submit\", \"value\", \"Login\", \"id\", \"submitButton\"], [\"type\", \"reset\", \"value\", \"Reset\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n          i0.ɵɵtext(2, \"Login Page\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.checkLoginDetails();\n          });\n          i0.ɵɵelementStart(4, \"label\");\n          i0.ɵɵtext(5, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"input\", 1)(7, \"br\");\n          i0.ɵɵelementStart(8, \"label\");\n          i0.ɵɵtext(9, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 2)(11, \"br\")(12, \"input\", 3)(13, \"input\", 4);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginRef);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { LoginComponent };","map":{"version":3,"names":["FormControl","FormGroup","LoginComponent","constructor","router","loginRef","emailid","password","checkLoginDetails","login","value","i0","ɵɵdirectiveInject","i1","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/Users/aidan/Desktop/CalTech Bootcamp/project1_client_meeting_app/src/app/login/login.component.ts","/Users/aidan/Desktop/CalTech Bootcamp/project1_client_meeting_app/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  // msg:string = \"\";\n  loginRef = new FormGroup({\n    emailid:new FormControl(),\n    password:new FormControl()\n  });\n\n  constructor(public router:Router) { // DI for Router API\n\n  }\n\n  checkLoginDetails(): void {\n    let login = this.loginRef.value;\n\n    // if (login.emailid == \"admin@gmail.com\" && login.password == \"admin123\") {\n    //   alert(\"Successful Login!\");\n    //   sessionStorage.setItem(\"emailid\", login.emailid);\n    //   this.router.navigate([\"/home\"], {skipLocationChange:true});\n    // }\n    // else {\n    //   alert(\"Unsuccessful login attempt! Please try again!\");\n    // }\n    // this.loginRef.reset();\n  }\n\n}\n","<div>\n    <h1>Login Page</h1>\n    <form [formGroup]=\"loginRef\" (ngSubmit)=\"checkLoginDetails()\">\n        <label>Email</label>\n            <input type=\"email\" formControlName=\"emailid\" id=\"email\"/><br/>\n        <label>Password</label>\n            <input type=\"password\" formControlName=\"password\" id=\"password\"/><br/>\n        <input type=\"submit\" value=\"Login\" id=\"submitButton\"/>\n        <input type=\"reset\" value=\"Reset\"/>\n    </form>\n</div>\n"],"mappings":"AAEA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;AAGvD,MAKaC,cAAc;EAOzBC,YAAmBC,MAAa;IAAb,KAAAA,MAAM,GAANA,MAAM;IANzB;IACA,KAAAC,QAAQ,GAAG,IAAIJ,SAAS,CAAC;MACvBK,OAAO,EAAC,IAAIN,WAAW,EAAE;MACzBO,QAAQ,EAAC,IAAIP,WAAW;KACzB,CAAC;EAIF;EAEAQ,iBAAiBA,CAAA;IACf,IAAIC,KAAK,GAAG,IAAI,CAACJ,QAAQ,CAACK,KAAK;IAE/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;;;uBAvBWR,cAAc,EAAAS,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAdZ,cAAc;MAAAa,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV3BV,EAAA,CAAAY,cAAA,UAAK;UACGZ,EAAA,CAAAa,MAAA,iBAAU;UAAAb,EAAA,CAAAc,YAAA,EAAK;UACnBd,EAAA,CAAAY,cAAA,cAA8D;UAAjCZ,EAAA,CAAAe,UAAA,sBAAAC,iDAAA;YAAA,OAAYL,GAAA,CAAAd,iBAAA,EAAmB;UAAA,EAAC;UACzDG,EAAA,CAAAY,cAAA,YAAO;UAAAZ,EAAA,CAAAa,MAAA,YAAK;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UAChBd,EAAA,CAAAiB,SAAA,eAA0D;UAC9DjB,EAAA,CAAAY,cAAA,YAAO;UAAAZ,EAAA,CAAAa,MAAA,eAAQ;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UACnBd,EAAA,CAAAiB,SAAA,gBAAiE;UAGzEjB,EAAA,CAAAc,YAAA,EAAO;;;UAPDd,EAAA,CAAAkB,SAAA,GAAsB;UAAtBlB,EAAA,CAAAmB,UAAA,cAAAR,GAAA,CAAAjB,QAAA,CAAsB;;;;;;;;SDQnBH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}