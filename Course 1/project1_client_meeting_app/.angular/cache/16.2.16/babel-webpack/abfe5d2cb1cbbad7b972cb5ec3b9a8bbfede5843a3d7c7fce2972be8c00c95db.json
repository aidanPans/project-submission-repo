{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nlet MeetingComponent = class MeetingComponent {\n  constructor(ds, router) {\n    this.ds = ds;\n    this.router = router;\n    this.meeting_message = \"\";\n    this.meetingRef = new FormGroup({\n      meet_topic: new FormControl(),\n      meet_num_people: new FormControl(),\n      meet_time: new FormControl()\n    });\n  } // DI for Data Service\n  addMeeting() {\n    // creating new meeting variables\n    let new_meeting = this.meetingRef.value;\n    this.ds.addMeeting(new_meeting);\n  }\n  displayMeeting() {\n    let user = sessionStorage.getItem(\"emailid\");\n    let new_meeting = this.meetingRef.value;\n    this.meeting_message = \"Meeting created for \" + user + \": \" + new_meeting.meet_time;\n  }\n};\nMeetingComponent = __decorate([Component({\n  selector: 'app-meeting',\n  templateUrl: './meeting.component.html',\n  styleUrls: ['./meeting.component.css']\n})], MeetingComponent);\nexport { MeetingComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","MeetingComponent","constructor","ds","router","meeting_message","meetingRef","meet_topic","meet_num_people","meet_time","addMeeting","new_meeting","value","displayMeeting","user","sessionStorage","getItem","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/aidan/Desktop/CalTech Bootcamp/project1_client_meeting_app/src/app/meeting/meeting.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DataService } from '../service/data.service';\n\n@Component({\n  selector: 'app-meeting',\n  templateUrl: './meeting.component.html',\n  styleUrls: ['./meeting.component.css']\n})\nexport class MeetingComponent {\n  meeting_message = \"\";\n\n  meetingRef = new FormGroup({\n    meet_topic:new FormControl(),\n    meet_num_people:new FormControl(),\n    meet_time:new FormControl()\n  });\n\n  constructor(public ds:DataService, public router:Router) {} // DI for Data Service\n\n  addMeeting(): void {\n    // creating new meeting variables\n    let new_meeting = this.meetingRef.value;\n    this.ds.addMeeting(new_meeting);\n\n  }\n\n  displayMeeting(): void {\n    let user = sessionStorage.getItem(\"emailid\");\n    let new_meeting = this.meetingRef.value;\n    this.meeting_message = \"Meeting created for \" + user + \": \" + new_meeting.meet_time;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AASvD,IAAaC,gBAAgB,GAA7B,MAAaA,gBAAgB;EAS3BC,YAAmBC,EAAc,EAASC,MAAa;IAApC,KAAAD,EAAE,GAAFA,EAAE;IAAqB,KAAAC,MAAM,GAANA,MAAM;IARhD,KAAAC,eAAe,GAAG,EAAE;IAEpB,KAAAC,UAAU,GAAG,IAAIN,SAAS,CAAC;MACzBO,UAAU,EAAC,IAAIR,WAAW,EAAE;MAC5BS,eAAe,EAAC,IAAIT,WAAW,EAAE;MACjCU,SAAS,EAAC,IAAIV,WAAW;KAC1B,CAAC;EAEwD,CAAC,CAAC;EAE5DW,UAAUA,CAAA;IACR;IACA,IAAIC,WAAW,GAAG,IAAI,CAACL,UAAU,CAACM,KAAK;IACvC,IAAI,CAACT,EAAE,CAACO,UAAU,CAACC,WAAW,CAAC;EAEjC;EAEAE,cAAcA,CAAA;IACZ,IAAIC,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;IAC5C,IAAIL,WAAW,GAAG,IAAI,CAACL,UAAU,CAACM,KAAK;IACvC,IAAI,CAACP,eAAe,GAAG,sBAAsB,GAAGS,IAAI,GAAG,IAAI,GAAGH,WAAW,CAACF,SAAS;EACrF;CACD;AAvBYR,gBAAgB,GAAAgB,UAAA,EAL5BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWnB,gBAAgB,CAuB5B;SAvBYA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}