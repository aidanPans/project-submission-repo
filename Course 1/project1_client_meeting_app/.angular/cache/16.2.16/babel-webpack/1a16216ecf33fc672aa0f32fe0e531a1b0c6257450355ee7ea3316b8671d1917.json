{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/data.service\";\nimport * as i3 from \"@angular/forms\";\nclass LoginComponent {\n  constructor(router, ds) {\n    this.router = router;\n    this.ds = ds;\n    // msg:string = \"\";\n    this.loginRef = new FormGroup({\n      emailid: new FormControl(),\n      password: new FormControl()\n    });\n  }\n  checkLoginDetails() {\n    let user_type = \"\";\n    let login = this.loginRef.value;\n    user_type = this.ds.checkLoginDetails(login); // setting the user type\n    // Checking login and user credentials\n    if (user_type == \"DNE\") {\n      // user does not exist\n      alert(\"Unsuccessful Login Attempt. Please Try Again.\");\n    } else {\n      if (user_type == \"client\") {\n        // user is a client\n        alert(\"Successful Login!\");\n        sessionStorage.setItem(\"emailid\", login.emailid);\n        this.router.navigate([\"/home\"], {\n          skipLocationChange: true\n        });\n      } else {\n        // user is an admin\n        alert(\"Successful Login!\");\n        sessionStorage.setItem(\"emailid\", login.emailid);\n        this.router.navigate([\"/admin_home\"], {\n          skipLocationChange: true\n        });\n      }\n    }\n    this.loginRef.reset();\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 18,\n      vars: 1,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"formControlName\", \"emailid\", \"id\", \"email\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\"], [\"type\", \"submit\", \"value\", \"Login\", \"id\", \"submitButton\"], [\"type\", \"reset\", \"value\", \"Reset\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n          i0.ɵɵtext(2, \"Login Page\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.checkLoginDetails();\n          });\n          i0.ɵɵelementStart(4, \"label\");\n          i0.ɵɵtext(5, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"br\")(7, \"input\", 1)(8, \"br\");\n          i0.ɵɵelementStart(9, \"label\");\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"br\")(12, \"input\", 2)(13, \"br\")(14, \"hr\")(15, \"input\", 3);\n          i0.ɵɵtext(16, \" | \");\n          i0.ɵɵelement(17, \"input\", 4);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginRef);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { LoginComponent };","map":{"version":3,"names":["FormControl","FormGroup","LoginComponent","constructor","router","ds","loginRef","emailid","password","checkLoginDetails","user_type","login","value","alert","sessionStorage","setItem","navigate","skipLocationChange","reset","i0","ɵɵdirectiveInject","i1","Router","i2","DataService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/Users/aidan/Desktop/CalTech Bootcamp/project1_client_meeting_app/src/app/login/login.component.ts","/Users/aidan/Desktop/CalTech Bootcamp/project1_client_meeting_app/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from '../service/data.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  // msg:string = \"\";\n  loginRef = new FormGroup({\n    emailid:new FormControl(),\n    password:new FormControl()\n  });\n\n  constructor(public router:Router, public ds:DataService) { // DI for Router API\n\n  }\n\n  checkLoginDetails(): void {\n    let user_type = \"\";\n    let login = this.loginRef.value;\n    user_type = this.ds.checkLoginDetails(login);   // setting the user type\n\n    // Checking login and user credentials\n    if (user_type == \"DNE\") {\n      // user does not exist\n      alert(\"Unsuccessful Login Attempt. Please Try Again.\");\n    }\n    else {\n      if (user_type == \"client\") {\n        // user is a client\n        alert(\"Successful Login!\");\n        sessionStorage.setItem(\"emailid\", login.emailid);\n        this.router.navigate([\"/home\"], {skipLocationChange:true});\n      }\n      else {\n        // user is an admin\n        alert(\"Successful Login!\");\n        sessionStorage.setItem(\"emailid\", login.emailid);\n        this.router.navigate([\"/admin_home\"], {skipLocationChange:true});\n      }\n    }\n    this.loginRef.reset();\n  }\n\n}\n","<div>\n    <h1>Login Page</h1>\n    <form [formGroup]=\"loginRef\" (ngSubmit)=\"checkLoginDetails()\">\n        <label>Email</label><br/>\n            <input type=\"email\" formControlName=\"emailid\" id=\"email\"/><br/>\n        <label>Password</label><br/>\n            <input type=\"password\" formControlName=\"password\" id=\"password\"/><br/>\n        <hr>\n        <input type=\"submit\" value=\"Login\" id=\"submitButton\"/> | \n        <input type=\"reset\" value=\"Reset\"/>\n    </form>\n</div>\n"],"mappings":"AAEA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;;AAGvD,MAKaC,cAAc;EAOzBC,YAAmBC,MAAa,EAASC,EAAc;IAApC,KAAAD,MAAM,GAANA,MAAM;IAAgB,KAAAC,EAAE,GAAFA,EAAE;IAN3C;IACA,KAAAC,QAAQ,GAAG,IAAIL,SAAS,CAAC;MACvBM,OAAO,EAAC,IAAIP,WAAW,EAAE;MACzBQ,QAAQ,EAAC,IAAIR,WAAW;KACzB,CAAC;EAIF;EAEAS,iBAAiBA,CAAA;IACf,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAIC,KAAK,GAAG,IAAI,CAACL,QAAQ,CAACM,KAAK;IAC/BF,SAAS,GAAG,IAAI,CAACL,EAAE,CAACI,iBAAiB,CAACE,KAAK,CAAC,CAAC,CAAG;IAEhD;IACA,IAAID,SAAS,IAAI,KAAK,EAAE;MACtB;MACAG,KAAK,CAAC,+CAA+C,CAAC;KACvD,MACI;MACH,IAAIH,SAAS,IAAI,QAAQ,EAAE;QACzB;QACAG,KAAK,CAAC,mBAAmB,CAAC;QAC1BC,cAAc,CAACC,OAAO,CAAC,SAAS,EAAEJ,KAAK,CAACJ,OAAO,CAAC;QAChD,IAAI,CAACH,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;UAACC,kBAAkB,EAAC;QAAI,CAAC,CAAC;OAC3D,MACI;QACH;QACAJ,KAAK,CAAC,mBAAmB,CAAC;QAC1BC,cAAc,CAACC,OAAO,CAAC,SAAS,EAAEJ,KAAK,CAACJ,OAAO,CAAC;QAChD,IAAI,CAACH,MAAM,CAACY,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE;UAACC,kBAAkB,EAAC;QAAI,CAAC,CAAC;;;IAGpE,IAAI,CAACX,QAAQ,CAACY,KAAK,EAAE;EACvB;;;uBApCWhB,cAAc,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAdtB,cAAc;MAAAuB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV3BZ,EAAA,CAAAc,cAAA,UAAK;UACGd,EAAA,CAAAe,MAAA,iBAAU;UAAAf,EAAA,CAAAgB,YAAA,EAAK;UACnBhB,EAAA,CAAAc,cAAA,cAA8D;UAAjCd,EAAA,CAAAiB,UAAA,sBAAAC,iDAAA;YAAA,OAAYL,GAAA,CAAAvB,iBAAA,EAAmB;UAAA,EAAC;UACzDU,EAAA,CAAAc,cAAA,YAAO;UAAAd,EAAA,CAAAe,MAAA,YAAK;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UAAAhB,EAAA,CAAAmB,SAAA,SAAK;UAEzBnB,EAAA,CAAAc,cAAA,YAAO;UAAAd,EAAA,CAAAe,MAAA,gBAAQ;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UAAAhB,EAAA,CAAAmB,SAAA,UAAK;UAG2BnB,EAAA,CAAAe,MAAA,WACvD;UAAAf,EAAA,CAAAmB,SAAA,gBAAmC;UACvCnB,EAAA,CAAAgB,YAAA,EAAO;;;UARDhB,EAAA,CAAAoB,SAAA,GAAsB;UAAtBpB,EAAA,CAAAqB,UAAA,cAAAR,GAAA,CAAA1B,QAAA,CAAsB;;;;;;;;SDQnBJ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}