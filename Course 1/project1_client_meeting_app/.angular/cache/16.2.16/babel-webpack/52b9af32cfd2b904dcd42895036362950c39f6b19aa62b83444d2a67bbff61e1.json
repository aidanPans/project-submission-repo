{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass LoginService {\n  constructor(router) {\n    this.router = router;\n  }\n  checkLoginDetails(login) {\n    if (login.emailid == \"admin36@gmail.com\" && login.password == \"admin36\") {\n      return \"Success! Welcome Admin!\";\n    } else {\n      return \"Failed login attempt, please try again with a different email and/or password\";\n    }\n  }\n  static {\n    this.ɵfac = function LoginService_Factory(t) {\n      return new (t || LoginService)(i0.ɵɵinject(i1.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoginService,\n      factory: LoginService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { LoginService };","map":{"version":3,"names":["LoginService","constructor","router","checkLoginDetails","login","emailid","password","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["/Users/aidan/Desktop/CalTech Bootcamp/project1_client_meeting_app/src/app/login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(public router:Router) { }\n\n  checkLoginDetails(login:any):string {\n    if(login.emailid==\"admin36@gmail.com\" && login.password==\"admin36\") {\n      return \"Success! Welcome Admin!\";\n    }\n    else {\n      return \"Failed login attempt, please try again with a different email and/or password\";\n    }\n  }\n}\n"],"mappings":";;AAGA,MAGaA,YAAY;EAEvBC,YAAmBC,MAAa;IAAb,KAAAA,MAAM,GAANA,MAAM;EAAW;EAEpCC,iBAAiBA,CAACC,KAAS;IACzB,IAAGA,KAAK,CAACC,OAAO,IAAE,mBAAmB,IAAID,KAAK,CAACE,QAAQ,IAAE,SAAS,EAAE;MAClE,OAAO,yBAAyB;KACjC,MACI;MACH,OAAO,+EAA+E;;EAE1F;;;uBAXWN,YAAY,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAZV,YAAY;MAAAW,OAAA,EAAZX,YAAY,CAAAY,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA;;SAEPb,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}