{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/data.service\";\nimport * as i3 from \"@angular/common\";\nfunction AdminDashboardComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nclass AdminDashboardComponent {\n  constructor(router, ds) {\n    this.router = router;\n    this.ds = ds;\n    this.client_info = \"\";\n    this.meeting_info = \"\";\n    this.login_info = \"\";\n    this.client_array = [];\n  }\n  logout() {\n    this.router.navigate([\"/login\"], {\n      skipLocationChange: true\n    });\n  }\n  displayAllClients() {\n    this.client_array = this.ds.getAllClient();\n    console.log(this.client_array);\n    // for (const key of client_array) {\n    //   this.client_info = this.client_info + client_array[key].id + \" \";\n    // }\n    console.log(this.client_info);\n  }\n  displayAllLogins() {\n    let logins_array = this.ds.getAllLogins();\n    for (const key of logins_array) {\n      this.login_info = this.login_info + logins_array[key].id + \" \";\n    }\n    console.log(this.login_info);\n  }\n  displayAllMeetings() {\n    let meetings_array = this.ds.getAllMeetingInfo();\n    for (const key in meetings_array) {\n      this.meeting_info = this.meeting_info + meetings_array[key].id + \" \";\n    }\n    console.log(this.meeting_info);\n  }\n  static {\n    this.ɵfac = function AdminDashboardComponent_Factory(t) {\n      return new (t || AdminDashboardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminDashboardComponent,\n      selectors: [[\"app-admin-dashboard\"]],\n      decls: 12,\n      vars: 1,\n      consts: [[\"type\", \"button\", \"value\", \"View All Clients\", 3, \"click\"], [\"type\", \"button\", \"value\", \"View All Meetings\", 3, \"click\"], [\"type\", \"button\", \"value\", \"View All Logins\", 3, \"click\"], [\"type\", \"button\", \"value\", \"log out\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function AdminDashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n          i0.ɵɵtext(2, \"Welcome to your Dashboard, Admin\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"hr\");\n          i0.ɵɵelementStart(4, \"input\", 0);\n          i0.ɵɵlistener(\"click\", function AdminDashboardComponent_Template_input_click_4_listener() {\n            return ctx.displayAllClients();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(5, \" | \");\n          i0.ɵɵelementStart(6, \"input\", 1);\n          i0.ɵɵlistener(\"click\", function AdminDashboardComponent_Template_input_click_6_listener() {\n            return ctx.displayAllMeetings();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(7, \" | \");\n          i0.ɵɵelementStart(8, \"input\", 2);\n          i0.ɵɵlistener(\"click\", function AdminDashboardComponent_Template_input_click_8_listener() {\n            return ctx.displayAllLogins();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(9, \" | \");\n          i0.ɵɵelementStart(10, \"input\", 3);\n          i0.ɵɵlistener(\"click\", function AdminDashboardComponent_Template_input_click_10_listener() {\n            return ctx.logout();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(11, AdminDashboardComponent_div_11_Template, 1, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngForOf\", ctx.client_array);\n        }\n      },\n      dependencies: [i3.NgForOf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { AdminDashboardComponent };","map":{"version":3,"names":["i0","ɵɵelement","AdminDashboardComponent","constructor","router","ds","client_info","meeting_info","login_info","client_array","logout","navigate","skipLocationChange","displayAllClients","getAllClient","console","log","displayAllLogins","logins_array","getAllLogins","key","id","displayAllMeetings","meetings_array","getAllMeetingInfo","ɵɵdirectiveInject","i1","Router","i2","DataService","selectors","decls","vars","consts","template","AdminDashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AdminDashboardComponent_Template_input_click_4_listener","AdminDashboardComponent_Template_input_click_6_listener","AdminDashboardComponent_Template_input_click_8_listener","AdminDashboardComponent_Template_input_click_10_listener","ɵɵtemplate","AdminDashboardComponent_div_11_Template","ɵɵadvance","ɵɵproperty"],"sources":["/Users/aidan/Desktop/CalTech Bootcamp/project1_client_meeting_app/src/app/admin-dashboard/admin-dashboard.component.ts","/Users/aidan/Desktop/CalTech Bootcamp/project1_client_meeting_app/src/app/admin-dashboard/admin-dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from '../service/data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent {\n  client_info = \"\";\n  meeting_info = \"\";\n  login_info = \"\";\n  client_array:Array<any> = [];\n\n  constructor(public router:Router, public ds:DataService) { }\n\n  logout(): void {\n    this.router.navigate([\"/login\"], {skipLocationChange:true});\n  }\n\n  displayAllClients(): void {\n    this.client_array = this.ds.getAllClient();\n    console.log(this.client_array);\n    // for (const key of client_array) {\n    //   this.client_info = this.client_info + client_array[key].id + \" \";\n    // }\n    console.log(this.client_info);\n  }\n\n  displayAllLogins(): void {\n    let logins_array = this.ds.getAllLogins();\n    for (const key of logins_array) {\n      this.login_info = this.login_info + logins_array[key].id + \" \";\n    }\n    console.log(this.login_info);\n  }\n\n  displayAllMeetings(): void {\n    let meetings_array = this.ds.getAllMeetingInfo();\n    for (const key in meetings_array) {\n      this.meeting_info = this.meeting_info + meetings_array[key].id + \" \";\n    }\n    console.log(this.meeting_info);\n  }\n}  \n","<div>\n    <h2>Welcome to your Dashboard, Admin</h2>\n    <hr>\n    <input type=\"button\" value=\"View All Clients\" (click)=\"displayAllClients()\"/> | \n    <input type=\"button\" value=\"View All Meetings\" (click)=\"displayAllMeetings()\"/> |\n    <input type=\"button\" value=\"View All Logins\" (click)=\"displayAllLogins();\"/> | \n    <input type=\"button\" value=\"log out\" (click)=\"logout()\"/>\n    <!-- <h4>Client Info:</h4>\n        <p>{{client_info}}</p>\n    <h4>Meeting Info:</h4>\n        <p>{{meeting_info}}</p>\n    <h4>Logins Info:</h4>\n        <p>{{login_info}}</p> -->\n    \n    <div *ngFor=\"let client of client_array\">\n        \n    </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}